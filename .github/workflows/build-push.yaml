name: Docker

on:
  # schedule:
  #   - cron: '25 1 * * *'
  workflow_dispatch: 


env:
  # Use docker.io for Docker Hub if empty
  #REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: terraform-ecr1


jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/any-app:latest .
        docker push $ECR_REGISTRY/any-app:latest
        echo "image=$ECR_REGISTRY/any-app:latest" >> $GITHUB_OUTPUT
  new_push_job:
    runs-on: ubuntu-latest
    name: New push to repo
    steps:
    - name: Publish to slack channel via bot token
      id: slack
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: 'D0616RLLNUW' # ID of Slack Channel you want to post to
        slack-message: 'posting from a github action!' # The message you want to post
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      